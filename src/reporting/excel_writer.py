import pandas as pd
import logging
from typing import List, Union, cast
from xlsxwriter.workbook import Workbook
from xlsxwriter.worksheet import Worksheet
import os

logger = logging.getLogger(__name__)


class ExcelWriter:
    @staticmethod
    def create_spreadsheet_with_results(
        df: pd.DataFrame, filename: str = "results/results.xlsx"
    ):
        """Creates a spreadsheet with the results of the meta tag search.

        Args:
            urls (List[str]): A list of URLs that were searched.
            results (List[Union[bool, str]]): A list of results for each URL.
        """

        output_dir = os.path.dirname(filename)
        if output_dir:
            os.makedirs(output_dir, exist_ok=True)

        with pd.ExcelWriter(filename, engine="xlsxwriter") as writer:
            df.to_excel(writer, sheet_name="Results", index=False)

            workbook = cast(Workbook, writer.book)
            worksheet: Worksheet = writer.sheets["Results"]

            header_format = workbook.add_format(
                {
                    "bold": True,
                    "text_wrap": True,
                    "valign": "top",
                    "fg_color": "#111BA5",
                    "font_color": "white",
                    "border": 1,
                    "align": "center",
                }
            )

            cell_format = workbook.add_format({"align": "center", "valign": "vcenter"})

            green_format = workbook.add_format(
                {
                    "bg_color": "#C6EFCE",
                    "font_color": "#006100",
                }
            )
            red_format = workbook.add_format(
                {
                    "bg_color": "#FFC7CE",
                    "font_color": "#9C0006",
                }
            )
            yellow_format = workbook.add_format(
                {
                    "bg_color": "#FFEB9C",
                    "font_color": "#9C6500",
                }
            )

            for col_num, value in enumerate(df.columns.values):
                worksheet.write(0, col_num, value, header_format)

            worksheet.set_column("A:A", 70, cell_format)

            first_row = 1
            last_row = len(df)

            for col_num, _ in enumerate(df.columns[1:], start=1):

                worksheet.set_column(col_num, col_num, 35, cell_format)

                worksheet.conditional_format(
                    first_row,
                    col_num,
                    last_row,
                    col_num,
                    {
                        "type": "cell",
                        "criteria": "==",
                        "value": True,
                        "format": green_format,
                    },
                )
                worksheet.conditional_format(
                    first_row,
                    col_num,
                    last_row,
                    col_num,
                    {
                        "type": "cell",
                        "criteria": "==",
                        "value": False,
                        "format": red_format,
                    },
                )
                worksheet.conditional_format(
                    first_row,
                    col_num,
                    last_row,
                    col_num,
                    {
                        "type": "text",
                        "criteria": "containing",
                        "value": "Error",
                        "format": yellow_format,
                    },
                )

            worksheet.autofilter(0, 0, len(df), len(df.columns) - 1)

            signature_format = workbook.add_format(
                {"italic": True, "font_color": "#757575"}
            )

            signature_row = len(df) + 2

            worksheet.merge_range(
                signature_row,
                0,
                signature_row,
                len(df.columns) - 1,
                "Generated by SEOHelper - by Armando Monteiro",
                signature_format,
            )

        logger.info("Spreadsheet created successfully")
        print(f"Spreadsheet '{filename}' created successfully")
